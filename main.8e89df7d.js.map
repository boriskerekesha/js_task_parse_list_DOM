{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelectorAll","arrList","getNumber","str","Number","split","join","slice","sortList","arr","sort","prev","current","dataset","salary","listAfterSort","querySelector","item","append","getEmployees","listItem"],"mappings":";AAAA,aAoBA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlBA,IAAMA,EAAOC,SAASC,iBAAiB,MAEjCC,EAAcH,EAAAA,GACdI,EAAY,SAACC,GAAQC,OAAAA,OAAOD,EAAIE,MAAM,KAAKC,KAAK,IAAIC,MAAM,KAE1DC,EAAW,SAACC,GAAQA,OAAAA,EAAIC,KAAK,SAACC,EAAMC,GACxCV,OAAAA,EAAUU,EAAQC,QAAQC,QAAUZ,EAAUS,EAAKE,QAAQC,WAE7DN,EAASP,GAET,IAQA,EARMc,EAAgBhB,SAASiB,cAAc,MAE1Bf,EAAAA,EAAAA,GAMnB,IAN4B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBgB,IAAAA,EAAiB,EAAA,MAC1BF,EAAcG,OAAOD,IAKvB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAFA,IAAME,EAAe,SAACC,GAAiBA,OAAAA,EAAAA,IAEvCD,EAAarB","file":"main.8e89df7d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelectorAll('li');\n\nconst arrList = [...list];\nconst getNumber = (str) => Number(str.split(',').join('').slice(1));\n\nconst sortList = (arr) => arr.sort((prev, current) =>\n  getNumber(current.dataset.salary) - getNumber(prev.dataset.salary));\n\nsortList(arrList);\n\nconst listAfterSort = document.querySelector('ul');\n\nfor (const item of arrList) {\n  listAfterSort.append(item);\n};\n\nconst getEmployees = (listItem) => [...listItem];\n\ngetEmployees(list);\n"]}